var I=Object.defineProperty;var g=Object.getOwnPropertySymbols;var j=Object.prototype.hasOwnProperty,D=Object.prototype.propertyIsEnumerable;var w=(t,e,r)=>e in t?I(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,p=(t,e)=>{for(var r in e||(e={}))j.call(e,r)&&w(t,r,e[r]);if(g)for(var r of g(e))D.call(e,r)&&w(t,r,e[r]);return t};const T=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const c of document.querySelectorAll('link[rel="modulepreload"]'))s(c);new MutationObserver(c=>{for(const o of c)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function r(c){const o={};return c.integrity&&(o.integrity=c.integrity),c.referrerpolicy&&(o.referrerPolicy=c.referrerpolicy),c.crossorigin==="use-credentials"?o.credentials="include":c.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(c){if(c.ep)return;c.ep=!0;const o=r(c);fetch(c.href,o)}};T();const V=(t,e)=>{t.innerHTML="",e.forEach((r,s)=>{const c=document.createElement("div");c.className="grid-row",c.id="R"+s,r.forEach((o,i)=>{const a=document.createElement("cell");a.textContent=String(o),a.id="R"+s+"C"+i,a.className=`grid-cell ${o?`gc-${o}`:""}`,c.appendChild(a)}),t.appendChild(c)})},k={gridSize:{row:20,col:10},speed:1e3},b=(t,e)=>{if(e<=0)return t;const r=t[0].map((s,c)=>t.map(o=>o[c]).reverse());return b(r,e-1)},S={I:[[1,1,1,1],[0,0,0,0],[0,0,0,0],[0,0,0,0]],J:[[1,1,0],[1,0,0],[1,0,0]],L:[[1,1,0],[0,1,0],[0,1,0]],O:[[1,1],[1,1]],S:[[1,0,0],[1,1,0],[0,1,0]],SR:[[0,1,0],[1,1,0],[1,0,0]],T:[[0,1,0],[1,1,1],[0,0,0]]},_=t=>t.map(e=>e.map(r=>r)),m=({grid:t,block:{x:e,y:r,blockCode:s,rotation:c}})=>{const o=S[s],i=_(t);return b(o,c).forEach((d,M)=>{const u=r-M;d.forEach((N,U)=>{var v,y;if(!N)return;const h=e-U,P=h<0,R=h>=((v=i==null?void 0:i[u])==null?void 0:v.length),q=u>=i.length;if(P||R||q)throw new Error("OUT_OF_BOUND");if((y=i==null?void 0:i[u])!=null&&y[h])throw new Error("OVERLAP_VALUE");u>=0&&(i[u][h]=s)})}),i},E=({row:t,col:e})=>new Array(t).fill(0).map(()=>new Array(e).fill(0)),$=()=>{const t=Object.keys(S);return t[Math.floor(Math.random()*t.length)]},G=t=>{const e=t.filter(s=>!s.every(Boolean)),r=t.length-e.length;return{removedLine:r,grid:[...E({row:r,col:t[0].length}),...e]}};class K extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.state={}}get props(){const e=this.getAttributeNames();return Object.fromEntries(e.map(r=>[r,this.getAttribute(r)]))}attributeChangedCallback(e,r,s){this.onPropsChange(e,r,s),this.rerender()}connectedCallback(){this.onMount(),this.rerender()}disconnectedCallback(){this.onUnmount()}rerender(){const e=this.render();this.shadow.innerHTML=e}setState(e){this.state=p(p({},this.state),e),this.rerender()}onPropsChange(e,r,s){}onMount(){}onUnmount(){}render(){return""}}var L={exports:{}};/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/(function(t){(function(){var e={}.hasOwnProperty;function r(){for(var s=[],c=0;c<arguments.length;c++){var o=arguments[c];if(!!o){var i=typeof o;if(i==="string"||i==="number")s.push(o);else if(Array.isArray(o)){if(o.length){var a=r.apply(null,o);a&&s.push(a)}}else if(i==="object")if(o.toString===Object.prototype.toString)for(var d in o)e.call(o,d)&&o[d]&&s.push(d);else s.push(o.toString())}}return s.join(" ")}t.exports?(r.default=r,t.exports=r):window.classNames=r})()})(L);var F=L.exports;class H extends K{constructor(){super(),this.state={isActive:this.props.active==="true"},this.handleKeyDown=e=>{var r;if(e.key===((r=this.props.key)==null?void 0:r.toLowerCase())){const s=!this.state.isActive;this.setState({isActive:s}),this.dispatchEvent(new CustomEvent("change",{detail:s}))}}}static get observedAttributes(){return["active","key","activeColor"]}onMount(){window.addEventListener("keydown",this.handleKeyDown)}onUmount(){window.removeEventListener("keydown",this.handleKeyDown)}onPropsChange(e,r,s){e==="active"&&this.setState({isActive:s==="true"})}render(){const{isActive:e}=this.state,{key:r}=this.props;return`
        <style>
            .active {
                color: #f44336;
            }
        </style>
        <div class="${F({active:e})}">
            [${r==null?void 0:r.toUpperCase()}] <slot />
        </div>
    `}}customElements.define("flip-switch",H);const A=()=>({x:6,y:0,rotation:0,blockCode:$()}),B=()=>({grid:E(k.gridSize),currentBlock:A(),clock:void 0,stopped:!0,score:0});let n=B();const l=t=>{const e=p(p({},n.currentBlock),t);m({grid:n.grid,block:e}),n.currentBlock=e,C()},C=()=>{const t=document.querySelector("#grid");if(!t)return;const e=m({grid:n.grid,block:n.currentBlock});V(t,e)},O=()=>{const t=document.querySelector("#score");!t||(t.innerText=n.score.toString())},f=()=>{clearInterval(n.clock),n=B(),C(),O(),x()},z=()=>{try{n.score+=1,l({y:n.currentBlock.y+1})}catch{const e=m({grid:n.grid,block:n.currentBlock}),{grid:r,removedLine:s}=G(e);n.score+=s*100,n.grid=r;try{l(A())}catch{f()}}finally{O()}},x=()=>{const t=document.querySelector("#stop");!t||(n.stopped?(clearInterval(n.clock),n.clock=void 0):n.clock=setInterval(z,k.speed),t==null||t.setAttribute("active",n.stopped?"true":"false"))};window.onload=()=>{var t,e;f(),(t=document.querySelector("#restart"))==null||t.addEventListener("change",r=>{r instanceof CustomEvent&&f()}),(e=document.querySelector("#stop"))==null||e.addEventListener("change",r=>{if(r instanceof CustomEvent){const s=r.detail;n.stopped=s,x()}})};document.addEventListener("keydown",t=>{try{switch(t.key){case"ArrowUp":{if(n.stopped)return;l({rotation:n.currentBlock.rotation+1>3?0:n.currentBlock.rotation+1});break}case"ArrowLeft":{if(n.stopped)return;l({x:n.currentBlock.x-1});break}case"ArrowRight":{if(n.stopped)return;l({x:n.currentBlock.x+1});break}case"ArrowDown":{if(n.stopped)return;l({y:n.currentBlock.y+1});break}case" ":{if(n.stopped)return;for(;;)l({y:n.currentBlock.y+1});break}}}catch{}});
